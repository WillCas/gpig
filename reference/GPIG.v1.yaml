openapi: 3.0.0
info:
  title: GPIG
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /info/totals:
    post:
      summary: ''
      operationId: post-info-actors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uninfected:
                    type: integer
                  asymp-not-infections:
                    type: integer
                  infections:
                    type: integer
                  serious-infections:
                    type: integer
                  dead:
                    type: integer
                  recovered:
                    type: integer
              examples:
                example:
                  value:
                    uninfected: 800000
                    asymp-not-infections: 50000
                    infections: 50000
                    serious-infections: 50000
                    dead: 25000
                    recovered: 25000
        '404':
          description: Not Found
        '418':
          description: I'm a teapot (RFC 2324)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: array
                  minItems: 0
                  items:
                    type: string
              required:
                - location
            examples:
              example:
                value:
                  location:
                    - A1
                    - B3
      description: Request for the total number of people in a grid location.
    parameters: []
  /info/actors:
    post:
      summary: ''
      operationId: post-info-actors-ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  actors:
                    type: array
                    items:
                      type: integer
              examples:
                example:
                  value:
                    actors:
                      - 1234
                      - 5678
        '404':
          description: Not Found
        '418':
          description: I'm a teapot (RFC 2324)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: array
                  minItems: 0
                  items:
                    type: string
              required:
                - location
            examples:
              example:
                value:
                  location:
                    - A0
      description: Request for the IDs of actors that are currently in a grid location (not including those in the dead state).
    parameters: []
  /info/homes:
    post:
      summary: ''
      operationId: post-info-actors-homes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  actors:
                    type: array
                    items:
                      type: integer
              examples:
                example-1:
                  value:
                    actors:
                      - 5678
                      - 1234
                      - 5556
        '404':
          description: Not Found
        '418':
          description: I'm a teapot (RFC 2324)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: array
                  minItems: 0
                  items:
                    type: string
              required:
                - location
            examples:
              example:
                value:
                  location: []
      description: Request for the IDs of actors who have homes in a grid location (including those in the dead state).
    parameters: []
  /info/id:
    post:
      summary: ''
      operationId: post-info-actors-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: string
                    enum:
                      - uninfected
                      - asymp-not-infections
                      - infections
                      - serious-infections
                      - dead
                      - recovered
                  location:
                    type: array
                    items:
                      type: string
                  home:
                    type: array
                    items:
                      type: string
                  age:
                    type: integer
                  vulnerable:
                    type: boolean
              examples:
                example:
                  value:
                    state: string
                    location:
                      - dead
                    home:
                      - A1
                      - B3
                    age: 69
                    vulnerable: false
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actor:
                  type: integer
              required:
                - actor
            examples:
              example:
                value:
                  actor: 12345
      description: Request for the current state of an actor.
    parameters: []
  /status:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  health-org-turn:
                    type: boolean
                  current-turn:
                    type: integer
                  budget:
                    type: integer
              examples:
                example:
                  value:
                    health-org-turn: true
                    current-turn: 0
                    budget: 1000
      operationId: get-status
      description: Request for the current simulation status.
    parameters: []
  /settings:
    get:
      summary: ''
      operationId: post-settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  unit:
                    type: string
                    enum:
                      - seconds
                      - minutes
                      - hours
                      - days
                  count:
                    type: integer
                    minimum: 1
              examples:
                example:
                  value:
                    unit: seconds
                    count: 100
      description: Request the current game settings.
    parameters: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
  securitySchemes: {}
