{
  "openapi": "3.0.0",
  "info": {
    "title": "GPIG",
    "description": "GPIG API",
    "version": "1.0",
    "contact": {
      "name": "William Castle",
      "email": "willcas1@hotmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": ""
    }
  ],
  "tags": [],
  "paths": {
    "/info/totals": {
      "post": {
        "tags": [],
        "summary": "Totals",
        "operationId": "post-info-actors",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Totals"
          },
          "404": {
            "description": "Not Found"
          },
          "418": {
            "description": "I'm a teapot (RFC 2324)"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "$ref": "#/components/schemas/Area"
                    }
                  }
                },
                "required": [
                  "location"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "location": [
                      "A1",
                      "B3"
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Request for the total number of people in a grid location."
      },
      "parameters": []
    },
    "/info/actors": {
      "post": {
        "tags": [],
        "summary": "Actor IDs",
        "operationId": "post-info-actors-ids",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "actors": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "actors": [
                        1234,
                        5678
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "418": {
            "description": "I'm a teapot (RFC 2324)"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "$ref": "#/components/schemas/Area"
                    }
                  }
                },
                "required": [
                  "location"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "location": [
                      "A0"
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Request for the IDs of actors that are currently in a grid location (not including those in the dead state)."
      },
      "parameters": []
    },
    "/info/homes": {
      "post": {
        "tags": [],
        "summary": "Actor Homes",
        "operationId": "post-info-actors-homes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "actors": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "actors": [
                        5678,
                        1234,
                        5556
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "418": {
            "description": "I'm a teapot (RFC 2324)"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                      "$ref": "#/components/schemas/Area"
                    }
                  }
                },
                "required": [
                  "location"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "location": []
                  }
                }
              }
            }
          }
        },
        "description": "Request for the IDs of actors who have homes in a grid location (including those in the dead state)."
      },
      "parameters": []
    },
    "/info/id": {
      "post": {
        "tags": [],
        "summary": "Actor Information",
        "operationId": "post-info-actors-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "uninfected",
                        "asymp-not-infections",
                        "infections",
                        "serious-infections",
                        "dead",
                        "recovered"
                      ]
                    },
                    "location": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "home": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "age": {
                      "type": "integer"
                    },
                    "vulnerable": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "state": "string",
                      "location": [
                        "dead"
                      ],
                      "home": [
                        "A1",
                        "B3"
                      ],
                      "age": 69,
                      "vulnerable": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "actor": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  }
                },
                "required": [
                  "actor"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "actor": 12345
                  }
                }
              }
            }
          }
        },
        "description": "Request for the current state of an actor."
      },
      "parameters": []
    },
    "/status": {
      "get": {
        "summary": "Simulation Status",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "health-org-turn": {
                      "type": "boolean"
                    },
                    "current-turn": {
                      "type": "integer"
                    },
                    "budget": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "health-org-turn": true,
                      "current-turn": 0,
                      "budget": 1000
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-status",
        "description": "Request for the current simulation status."
      },
      "parameters": []
    },
    "/settings": {
      "get": {
        "tags": [],
        "summary": "Simulation Settings",
        "operationId": "post-settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unit": {
                      "type": "string",
                      "enum": [
                        "seconds",
                        "minutes",
                        "hours",
                        "days"
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 1
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "unit": "seconds",
                      "count": 100
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Request the current game settings."
      },
      "parameters": []
    },
    "/actions": {
      "post": {
        "summary": "Adjust Actions",
        "operationId": "post-actions",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Actions"
          },
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "425": {
            "description": "Too Early"
          }
        },
        "description": "Allows the creation and deletion of actions in batch.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The actions you want to create or update",
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ActionCreate"
                    },
                    {
                      "$ref": "#/components/schemas/ActionDelete"
                    }
                  ]
                }
              }
            }
          },
          "description": "The action(s) you want to create or update"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InvestInVaccineParameters": {
        "title": "InvestInVaccineParameters",
        "type": "object",
        "description": "The parameters to the `investInVaccine` action.\n\nWork towards producing a vaccine for the contagion. A vaccine is produced once US$80 million has been invested in the production of a vaccine, at this point further investment will lead to subsequent vaccines being produced via the same process. The produced vaccine will be as described in section 8 of the GPIG Cross-Team Competition Rules.",
        "properties": {
          "amountInvested": {
            "type": "integer",
            "description": "The amount of money invested in this action in dollars"
          }
        },
        "required": [
          "amountInvested"
        ]
      },
      "FurloughParameters": {
        "title": "FurloughParameters",
        "type": "object",
        "description": "The parameters to the `furlough` action.\n\nProvide monetary support to those who are not able to work due to the contagion, propping up businesses that are not viable during the pandemic.\n\n- Reduces the number of people going to work\n- Higher amount results in higher budget cost\n- If used in combination with action 2 or 4, that action’s GDP cost is reduced\n",
        "properties": {
          "amountInvested": {
            "type": "integer",
            "description": "Amount invested (n money) per working person in dollars"
          },
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "amountInvested",
          "location"
        ]
      },
      "InformationPressReleaseParameters": {
        "title": "InformationPressReleaseParameters",
        "type": "object",
        "description": "The parameters to the `infoPressRelease` action.\n\nPress-releases to improve morale/disseminate information, which could have a negative effect if it goes wrong and are produced every set unit of time.\n\n- Increase awareness\n- Probably increase public opinion\n- Implementation can change the amount this increases (minimum of 0 increase)\n- Implementation can alter how much the improvement is based on number of previous press releases",
        "properties": {
          "amountInvested": {
            "type": "integer",
            "description": "The amount this action costs in dollars"
          },
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "amountInvested",
          "location"
        ]
      },
      "LoanParameters": {
        "title": "LoanParameters",
        "type": "object",
        "description": "The parameters to the `loan` action.\n\nAction to allow the WHO to take additional Budget for situations in which they run out of money. Negative effects of taking a loan are considered too long term or otherwise out of scope\n\n- Reduction in Score\n- Increase in Budget for the following turn (Lump sum)\n",
        "properties": {
          "amountLoaned": {
            "type": "integer",
            "description": "The amount of money loaned to WHO in dollars so far"
          }
        },
        "required": [
          "amountLoaned"
        ]
      },
      "ActionCreate": {
        "title": "Action Create",
        "type": "object",
        "description": "The request object for creating an action.\n\nThe `action` parameter has to match the corresonding `parameters` object, no doing so is an error.",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "format": "int32"
          },
          "action": {
            "type": "string",
            "enum": [
              "testAndIsolation",
              "stayAtHome",
              "closeSchools",
              "closeRecreationalLocations",
              "shieldingProgram",
              "movementRestrictions",
              "closeBorders",
              "investInVaccine",
              "furlough",
              "infoPressRelease",
              "loan",
              "maskMandate",
              "socialDistancingMandate",
              "curfew",
              "healthDrive",
              "investInHealthServices"
            ]
          },
          "mode": {
            "type": "string",
            "enum": [
              "create"
            ]
          },
          "parameters": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TestAndIsolationParameters"
              },
              {
                "$ref": "#/components/schemas/StayAtHomeParameters"
              },
              {
                "$ref": "#/components/schemas/CloseSchoolsParameters"
              },
              {
                "$ref": "#/components/schemas/CloseRecreationalLocationsParameters"
              },
              {
                "$ref": "#/components/schemas/ShieldingProgramParameters"
              },
              {
                "$ref": "#/components/schemas/MovementRestrictionsParameters"
              },
              {
                "$ref": "#/components/schemas/CloseBordersParameters"
              },
              {
                "$ref": "#/components/schemas/InvestInVaccineParameters"
              },
              {
                "$ref": "#/components/schemas/FurloughParameters"
              },
              {
                "$ref": "#/components/schemas/InformationPressReleaseParameters"
              },
              {
                "$ref": "#/components/schemas/LoanParameters"
              },
              {
                "$ref": "#/components/schemas/MaskMandateParameters"
              },
              {
                "$ref": "#/components/schemas/HealthDriveParameters"
              },
              {
                "$ref": "#/components/schemas/InvestInHealthServicesParameters"
              },
              {
                "$ref": "#/components/schemas/SocialDistancingMandateParameters"
              },
              {
                "$ref": "#/components/schemas/CurfewParameters"
              }
            ]
          }
        },
        "required": [
          "id",
          "action",
          "mode",
          "parameters"
        ]
      },
      "TestAndIsolationParameters": {
        "title": "TestAndIsolationParameters",
        "type": "object",
        "description": "The parameters for the `testAndIsolation` action.",
        "properties": {
          "testType": {
            "type": "string",
            "enum": [
              "good",
              "bad"
            ]
          },
          "quarantinePeriod": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          },
          "symptomaticOnly": {
            "type": "boolean"
          }
        },
        "required": [
          "testType",
          "quarantinePeriod",
          "quantity",
          "location",
          "symptomaticOnly"
        ]
      },
      "LocationCoords": {
        "title": "Location Coordinates",
        "type": "array",
        "description": "The model the defines an location coordinate.",
        "items": {
          "type": "string"
        }
      },
      "StayAtHomeParameters": {
        "title": "StayAtHomeParameters",
        "type": "object",
        "description": "The parameters for the `stayAtHome` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "location"
        ]
      },
      "CloseSchoolsParameters": {
        "title": "CloseSchoolsParameters",
        "type": "object",
        "description": "The parameters for the `closeSchools` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "location"
        ]
      },
      "CloseRecreationalLocationsParameters": {
        "title": "CloseRecreationalLocationsParameters",
        "type": "object",
        "description": "The parameters for the `closeRecreationalLocations` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "location"
        ]
      },
      "ActionDelete": {
        "title": "Action Delete",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "mode": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "mode"
        ],
        "description": "The request object for deleting an action."
      },
      "ShieldingProgramParameters": {
        "title": "Shielding Program Parameters",
        "type": "object",
        "description": "The parameters for the `shieldingProgram` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          },
          "vulnerablePeople": {
            "type": "boolean",
            "default": false
          },
          "ageThreshold": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          }
        },
        "required": [
          "location"
        ]
      },
      "MovementRestrictionsParameters": {
        "title": "Movement Restrictions Parameters",
        "type": "object",
        "description": "The parameters for the `movementRestrictions` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          },
          "distance": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        },
        "required": [
          "location",
          "distance"
        ]
      },
      "CloseBordersParameters": {
        "title": "Close Borders Parameters",
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "location"
        ],
        "description": "The parameters for the `closeBorders` action."
      },
      "MaskMandateParameters": {
        "title": "Mask Mandate Parameters",
        "type": "object",
        "description": "The parameters for the `maskMandate` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          },
          "maskProvisionLevel": {
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          }
        },
        "required": [
          "location",
          "maskProvisionLevel"
        ]
      },
      "HealthDriveParameters": {
        "title": "Health Drive Parameters",
        "type": "object",
        "description": "The parameters for the `healthDrive` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "location"
        ]
      },
      "InvestInHealthServicesParameters": {
        "title": "Invest In Health Services Parameters",
        "type": "object",
        "description": "The parameters for the `investInHealthServices` action.",
        "properties": {
          "amountInvested": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        },
        "required": [
          "amountInvested"
        ]
      },
      "SocialDistancingMandateParameters": {
        "title": "Social Distancing Mandate Parameters",
        "type": "object",
        "description": "The parameters for the `socialDistancingMadate` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          },
          "distance": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        },
        "required": [
          "location"
        ]
      },
      "CurfewParameters": {
        "title": "CurfewParameters",
        "type": "object",
        "description": "The parameters for the `curfew` action.",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationCoords"
          }
        },
        "required": [
          "location"
        ]
      }
    },
    "securitySchemes": {},
    "responses": {
      "Actions": {
        "description": "Response for POST `/actions`",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "code"
                ]
              }
            }
          }
        }
      },
      "Totals": {
        "description": "The response from GET `/info/totals`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "uninfected": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "asymptomaticInfectedNotInfectious": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "asymptomaticInfectedInfectious": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "symptomatic": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "seriousInfection": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "dead": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "recoveredImmune": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              },
              "required": [
                "uninfected",
                "asymptomaticInfectedNotInfectious",
                "asymptomaticInfectedInfectious",
                "symptomatic",
                "seriousInfection",
                "dead",
                "recoveredImmune"
              ]
            }
          }
        }
      }
    }
  }
}